# -*- coding: utf-8 -*-
"""Tugas Fuzzy logic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12R_5B6IsmVx0AKQtbXvm32NhBKL-E9s9
"""

!pip install scikit-fuzzy

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl
import matplotlib.pyplot as plt

# 1. Definisi variabel input
temperature = ctrl.Antecedent(np.arange(15, 41, 1), 'temperature')
humidity = ctrl.Antecedent(np.arange(20, 101, 1), 'humidity')

# 2. Definisi variabel output
fan_speed = ctrl.Consequent(np.arange(0, 101, 1), 'fan_speed')

# 3. Fungsi keanggotaan suhu
temperature['dingin'] = fuzz.trapmf(temperature.universe, [15, 15, 20, 24])
temperature['nyaman'] = fuzz.trimf(temperature.universe, [22, 26, 30])
temperature['panas'] = fuzz.trapmf(temperature.universe, [28, 32, 40, 40])

# 4. Fungsi keanggotaan kelembaban
humidity['kering'] = fuzz.trapmf(humidity.universe, [20, 20, 30, 45])
humidity['normal'] = fuzz.trimf(humidity.universe, [35, 50, 65])
humidity['lembab'] = fuzz.trapmf(humidity.universe, [55, 70, 100, 100])

# 5. Fungsi keanggotaan kecepatan kipas
fan_speed['mati'] = fuzz.trimf(fan_speed.universe, [0, 0, 25])
fan_speed['rendah'] = fuzz.trimf(fan_speed.universe, [0, 25, 50])
fan_speed['sedang'] = fuzz.trimf(fan_speed.universe, [25, 50, 75])
fan_speed['tinggi'] = fuzz.trimf(fan_speed.universe, [50, 75, 100])
fan_speed['maksimal'] = fuzz.trimf(fan_speed.universe, [75, 100, 100])

# 6. Visualisasi fungsi keanggotaan (opsional)
# temperature.view()
# humidity.view()
# fan_speed.view()

# 7. Aturan fuzzy dasar
rule1 = ctrl.Rule(temperature['dingin'] & humidity['kering'], fan_speed['mati'])
rule2 = ctrl.Rule(temperature['dingin'] & humidity['normal'], fan_speed['mati'])  # akan digantikan
rule3 = ctrl.Rule(temperature['dingin'] & humidity['lembab'], fan_speed['rendah'])

rule4 = ctrl.Rule(temperature['nyaman'] & humidity['kering'], fan_speed['rendah'])
rule5 = ctrl.Rule(temperature['nyaman'] & humidity['normal'], fan_speed['sedang'])
rule6 = ctrl.Rule(temperature['nyaman'] & humidity['lembab'], fan_speed['tinggi'])

rule7 = ctrl.Rule(temperature['panas'] & humidity['kering'], fan_speed['sedang'])
rule8 = ctrl.Rule(temperature['panas'] & humidity['normal'], fan_speed['tinggi'])
rule9 = ctrl.Rule(temperature['panas'] & humidity['lembab'], fan_speed['maksimal'])

# 8. Aturan tambahan (bukan contoh yang dilarang)
# Jika suhu dingin dan kelembaban normal → fan_speed rendah (modifikasi rule2)
rule10 = ctrl.Rule(temperature['dingin'] & humidity['normal'], fan_speed['rendah'])

# 9. Sistem kontrol fuzzy lengkap
ac_ctrl = ctrl.ControlSystem([
    rule1, rule3, rule4, rule5, rule6, rule7, rule8, rule9, rule10
])

ac = ctrl.ControlSystemSimulation(ac_ctrl)

# 10. Input suhu dan kelembaban untuk pengujian
ac.input['temperature'] = 22  # ✅ Perubahan input suhu menjadi 22°C
ac.input['humidity'] = 50     # kelembaban normal

# 11. Proses inferensi fuzzy
ac.compute()

# 12. Output hasil
print(f"Untuk suhu 22°C dan kelembaban 50%, kecepatan kipas AC: {ac.output['fan_speed']:.2f}%")

# 13. Visualisasi output hasil defuzzifikasi
fan_speed.view(sim=ac)
plt.show()

"""##Analisis Hasil Fuzzy Logic AC Controller
##1. Ubah input_suhu menjadi 22°C. Apa yang terjadi?

Saat suhu diatur menjadi 22°C, sistem mendeteksi bahwa nilai tersebut berada dalam dua fuzzy set sekaligus:

Dingin, karena 22°C berada di sisi kanan fungsi keanggotaan dingin [15, 15, 20, 24]

Nyaman, karena 22°C adalah titik awal fuzzy set nyaman [22, 26, 30]

Artinya, suhu 22°C memiliki derajat keanggotaan parsial (lebih dari 0) di keduanya, yang akan memicu lebih dari satu aturan fuzzy.
Karena overlap ini, output akhir yang dihasilkan adalah kombinasi halus dari beberapa aturan, misalnya kecepatan kipas menjadi rendah atau sedang.

##2. Tambahkan variabel kelembaban dan buat aturan baru

Variabel kelembaban sudah ditambahkan, dan aturan baru yang ditambahkan adalah:

Jika suhu dingin dan kelembaban normal, maka kecepatan kipas rendah.

Aturan ini bertujuan untuk:

Menangani kasus suhu rendah tapi dengan kelembaban sedang

Memberikan logika kontrol yang lebih adaptif terhadap variasi kelembaban meskipun suhu dingin

##3. Mengapa suhu 28°C memiliki nilai keanggotaan di "nyaman" dan "panas"?
Suhu 28°C berada di titik tumpang tindih (overlap) dua fuzzy set:

Nyaman [22, 26, 30]

Panas [28, 32, 40, 40]

Karena fuzzy logic tidak menggunakan batas tegas seperti logika klasik,
maka suhu 28 masih terasa sedikit nyaman, tetapi juga mulai terasa panas.

Nilai 28°C bisa memiliki dua derajat keanggotaan, misalnya:

0.3 di nyaman

0.5 di panas

Ini memungkinkan lebih dari satu aturan fuzzy aktif dan memberikan output yang lebih fleksibel.

##4. Hasil Perubahan: Ringkasan

Perubahan	Dampak
Input suhu 22°C	Memicu dua fuzzy set (dingin dan nyaman), menghasilkan output halus
Aturan baru ditambahkan	Menangani kondisi dingin dan lembab, kontrol kipas jadi lebih adaptif
Suhu 28°C dalam dua set	Karena overlap, hasil tidak ekstrem, lebih fleksibel dan realistis
##5. Kesimpulan
Fuzzy Logic sangat berguna untuk menangani situasi tidak pasti
dan transisi halus seperti suhu dan kenyamanan ruangan.
"""